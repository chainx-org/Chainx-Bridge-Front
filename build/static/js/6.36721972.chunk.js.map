{"version":3,"sources":["hooks/useAccountInfo.ts","hooks/useFormatBalance.ts","components/Redeem/style.tsx","page/History/style.tsx","components/RegisterVaultCard/style.tsx","components/VaultCard/style.tsx","components/VaultCard/EarnCard/style.tsx","components/VaultCard/EarnCard/icons/arrow.svg","components/BalanceSpan.tsx","components/VaultCard/EarnCard/index.tsx","components/VaultCard/BtcInfoCard/style.tsx","hooks/useVaults.ts","components/VaultCard/BtcInfoCard/index.tsx","components/VaultCard/HistoryCard/style.tsx","components/VaultCard/HistoryCard/index.tsx","hooks/useRedeemRequestList.ts","components/VaultCard/index.tsx","components/RegisterVaultCard/index.tsx","page/Vault/index.tsx"],"names":["useAccountInfo","account","useState","accountInfo","setAccountInfo","useApi","api","isApiReady","useEffect","a","query","system","info","fetchData","unsubscribe","rpc","chain","subscribeFinalizedHeads","header","FormatBalance","balance","toFixed","toString","toNumber","RedeemStyle","styled","div","RedeemBtcInputStyle","XBtcBalanceStyle","BtcAddressStyle","RedeemFooterStyle","footer","HistoryStyle","FunctionSwitchButton","TableStyle","RegisterVaultCardStyle","RegisterAccountStyle","CollateralStyle","AgreementStyle","VaultCardStyle","VaultTopStyle","EarnCardStyle","EarnCardTopStyle","AddCollateralModalStyle","AddCollateralInput","CollateralDisplayStyle","BalanceSpan","value","EarnCard","pcxPrice","useContext","FeeContext","t","useTranslation","AddCollateralModal","SetAddCollateralModal","vault","setVault","setUpperBound","secureThreshold","SetsecureThreshold","exchangeRate","useFeeContext","addPCX","setaddPCX","currentAccount","useAccountModel","address","web3FromAddress","injector","tx","xGatewayBitcoinV2","addExtraCollateral","signAndSend","signer","status","dispatchError","events","console","log","isInBlock","notification","message","asInBlock","duration","isModule","decoded","registry","findMetaError","asModule","documentation","name","section","join","type","catch","error","vaults","isSome","vaultInfo","unwrap","collateral","btcAddress","wallet","toBeRedeemToken","toBeRedeemedTokens","toBeIssuedToken","toBeIssuedTokens","issuedToken","issuedTokens","data","reserved","pcxInBtc","price","mul","divn","Math","pow","decimal","consts","className","isFinite","onClick","title","visible","onCancel","ConfirmationIssueTrade","free","onChange","e","src","arrowLogo","alt","BtcInfoCardStyle","TradeInfoStyle","useVaults","setWallat","isNone","getAssets","BtcInfoCard","HistoryCardStyle","data2","key","age","HistoryCard","HistoryStatus","SetHistoryStatus","redeemRequestsList","setRedeemRequestList","redeemRequests","entries","initIssueLog","map","request","find","eq","args","id","vaultId","requester","amount","chainxAddr","userBtcAddr","openTime","hash","countedBlock","sort","b","then","useRedeemRequests","Emitcolumns","dataIndex","width","ellipsis","style","cursor","columns","dataSource","filter","encodeAddress","decodeAddress","row","convertBalanceToDisplayValue","chainxAddress","VaultCard","RegisterVaultCard","regVault","setRegVault","values","registerVault","onFinish","Item","rules","required","min","placeholder","valuePropName","validator","_","Promise","resolve","reject","Error","href","htmlType","useVaultModel","createModel","VaultPage","GetStatus"],"mappings":"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","file":"static/js/6.36721972.chunk.js","sourcesContent":["import {useApi} from './useApi'\r\nimport { AccountInfo } from \"@polkadot/types/interfaces\";\r\nimport { useEffect, useState} from \"react\";\r\n\r\nexport function useAccountInfo(account: string): AccountInfo | null {\r\n    const [accountInfo, setAccountInfo] = useState<AccountInfo | null>(null);\r\n    const { api, isApiReady } = useApi();\r\n  \r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        if(account){\r\n          const info = await api.query.system.account(account);\r\n          setAccountInfo(info);\r\n        }else{\r\n          return\r\n        }\r\n      };\r\n  \r\n      if (isApiReady) {\r\n        fetchData();\r\n      }\r\n    }, [account, isApiReady]);\r\n  \r\n    useEffect(() => {\r\n      if (isApiReady) {\r\n        let unsubscribe = api.rpc.chain.subscribeFinalizedHeads(async header => {\r\n          if(account){\r\n            const info = await api.query.system.account(account);\r\n            setAccountInfo(info);\r\n          }else{\r\n            return\r\n          }\r\n        });\r\n  \r\n        return () => {\r\n          (async () => await unsubscribe)();\r\n        };\r\n      }\r\n      return () => {};\r\n    }, [account, isApiReady]);\r\n  \r\n    return accountInfo;\r\n  }","function FormatBalance(balance: { toNumber: () => number } | undefined | number) {\r\n    if (typeof balance === \"number\") {\r\n      return (balance / 100000000).toFixed(5).toString();\r\n    } else if (balance) {\r\n      return (balance!!.toNumber() / 100000000).toFixed(5).toString();\r\n    } else {\r\n      return \"-\";\r\n    }\r\n  }\r\n  export default FormatBalance;","import styled from \"styled-components\";\nimport React from \"react\";\n\nexport const RedeemStyle = styled.div`\n  margin-top: 20px;\n`\nexport const RedeemBtcInputStyle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 40px;\n\n  .ant-input-number {\n    width: 200px;\n    height: 44px;\n    font-size: 32px;\n    color: #8E8E8E;\n    line-height: 44px;\n  }\n\n  .btc-title {\n    font-size: 32px;\n    color: #282828;\n    font-weight: bold;\n    margin-left: 16px;\n  }\n\n  img {\n    width: 32px;\n    height: 32px;\n    margin-right: 16px;\n  }\n`\nexport const XBtcBalanceStyle = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  font-size: 14px;\n  color: #282828;\n  font-weight: bold;\n`\nexport const BtcAddressStyle = styled.div`\n  margin-top:16px;\n  .btc-address-info{\n    display: flex;\n    justify-content: space-between;\n    .btc-address-title{\n      font-size: 12px;\n      color: #282828;\n      font-weight: bold;\n    }\n    .btc-fee{\n      font-size: 12px;\n      color: #282828;\n    }\n  }\n  .ant-input {\n    width: 419px;\n    height: 44px;\n    font-size: 14px;\n    color: #8E8E8E;\n    line-height: 44px;\n    margin-top: 8px;\n  }\n`\nexport const RedeemFooterStyle = styled.footer`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  .redeem-footer-title {\n    font-size: 12px;\n    color: #282828;\n  }\n\n  .redeem-footer-num {\n    font-size: 24px;\n    color: #282828;\n    margin-top: 8px;\n  }\n\n  button {\n    width: 419px;\n    height: 44px;\n    margin-top: 20px;\n  }\n`\n","import styled from \"styled-components\";\n\nexport const HistoryStyle = styled.div`\n  margin: 24px;\n  background: #fff;\n  height: 100%;\n  padding: 30px;\n`\nexport const FunctionSwitchButton = styled.div`\n  font-size: 16px;\n  font-weight: bold;\n  color: #8E8E8E;\n  ul{\n    width: 425px;\n    height: 48px;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    background: #F6F6F6;\n    margin-top: 30px;\n    border-radius: 6px;\n  }\n  li{\n    width: 208px;\n    height: 44px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 6px;\n    &.active{\n      background: #fff;\n      color: #282828;\n    }\n  };\n`\nexport const TableStyle = styled.div`\n margin-top: 36px;\n  .ant-table-cell{\n    background: #fff;\n  }\n`\n","import styled from \"styled-components\";\n\nexport const RegisterVaultCardStyle = styled.div`\n  width: 499px;\n  height: 524px;\n  background: #fff;\n  margin: auto;\n  margin-top: 24px;\n  padding: 30px 40px;\n  button{\n    width: 419px;\n    height: 44px;\n    margin-top: 43px;\n  }\n  .card-title{\n    font-size: 16px;\n    color: #282828;\n    font-weight: bold;\n  }\n`\nexport const RegisterAccountStyle = styled.div`\n  background: #F6F6F6;\n  border-radius: 6px;\n  width: 419px;\n  height: 70px;\n  padding: 16px;\n  font-size: 12px;\n  color: #282828;\n  margin-top: 20px;\n\n  .current-account {\n    margin-top: 4px;\n    font-size: 12px;\n    color: #8E8E8E;\n  }\n`\nexport const CollateralStyle = styled.div`\n  .collateral-info{\n    display: flex;\n    margin-top: 20px;\n    .collateral-title{\n      font-size: 12px;\n      color: #282828;\n      font-weight: bold;\n    }\n    .collateral-minimum{\n      margin-left: 5px;\n      font-size: 12px;\n      color: #8E8E8E;\n    }\n  }\n  .input-collateral{\n    margin-top: 8px;\n    display: flex;\n    align-items: center;\n    .ant-input-number {\n      width: 240px;\n      height: 40px;\n      font-size: 14px;\n      color: #8E8E8E;\n      line-height: 40px;\n      margin-right: 16px;\n    }\n    .pcx-balance{\n      font-size: 12px;\n      color: #282828;\n    }\n  }\n`\nexport const AgreementStyle = styled.div`\n  font-size: 12px;\n  color: #282828;\n`\n","import styled from \"styled-components\";\n\nexport const VaultCardStyle = styled.div`\n   margin: 24px;\n    .vault-card-title{\n      font-size: 20px;\n      color: #3D3D3D;\n      font-weight: bold;\n    }\n`\n\nexport const VaultTopStyle = styled.div`\n   display: flex;\n  margin-top: 16px;\n`\n","import styled from \"styled-components\";\n\nexport const EarnCardStyle = styled.div`\n  padding: 30px;\n  padding-top: 10px;\n  width: 598px;\n  height: 322px;\n  background: #fff;\n  border: 1px solid #EFEFEF;\n  border-radius: 10px;\n  button{\n    width: 200px;\n    height: 45px;\n    margin-left: 300px;\n  }\n  ul li{\n    margin-top: 20px;\n    .earn-pcx-num{\n      color: #34C69A;\n      font-size: 20px;\n      font-weight: bold;\n    }\n    .chainx-address{\n      width: 239px;\n      font-size: 12px;\n      color: #009FCF;\n      word-break:break-all;\n    }\n    .issue-redeem-num{\n      font-size: 20px;\n      color: #3D3D3D;\n      font-weight: bold;\n    }\n    .issuable-num{\n      font-size: 20px;\n      color: #3D3D3D;\n      font-weight: bold;\n    }\n    .collateral-rate{\n      display: flex;\n      font-size: 20px;\n      color: #3D3D3D;\n      font-weight: bold;\n      .collateral-rate-num{\n        font-size: 20px;\n        color: #34C69A;\n      }\n    }\n    .email-edit{\n      font-size: 12px;\n      color: #282828;\n    }\n  }\n  .right-ul{\n    margin-left: 50px;\n  }\n  .earn-card-title{\n    font-size: 12px;\n    color: #8E8E8E;\n    margin-bottom: 10px;\n  }\n`\nexport const EarnCardTopStyle = styled.div`\n  display: flex;\n`\nexport const AddCollateralModalStyle =styled.div`\n position: absolute;\n`\nexport const AddCollateralInput = styled.div`\n .addCollateral-info{\n   display: flex;\n   justify-content: space-between;\n   .addCollateral-title{\n     font-size: 12px;\n     color: #282828;\n     font-weight: bold;\n   }\n   .addCollateral-amount{\n     font-size: 12px;\n     color: #282828;\n   }\n }\n  .ant-input-number{\n    width: 472px;\n    height: 44px;\n    margin-top: 7px;\n    line-height: 44px;\n  }\n`\n\nexport const CollateralDisplayStyle =styled.div`\n  ul{\n    background: #F6F6F6;\n    border-radius: 6px;\n    margin-top: 16px;\n    width: 472px;\n    height: 60px;\n    padding: 12px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    .collateral-num{\n      font-size: 16px;\n      color: #34C69A;\n      font-weight: bold;\n    }\n    .before{\n      display: flex;\n      justify-content: flex-end;\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/media/arrow.d128c49c.svg\";","import { FC } from \"react\";\r\n\r\ninterface BalanceSpanProps {\r\n  balance: { toNumber: () => number } | number | undefined;\r\n}\r\n\r\nexport const BalanceSpan: FC<BalanceSpanProps> = ({ balance }) => {\r\n  let value;\r\n  if (balance) {\r\n    if (typeof balance === \"number\") {\r\n      value = (balance / 100000000).toFixed(5).toString();\r\n    } else {\r\n      value = (balance.toNumber() / 100000000).toFixed(5).toString();\r\n    }\r\n  } else {\r\n    value = \"-\";\r\n  }\r\n  return <span>{value}</span>;\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  AddCollateralInput,\r\n  AddCollateralModalStyle,\r\n  CollateralDisplayStyle,\r\n  EarnCardStyle,\r\n  EarnCardTopStyle,\r\n} from \"./style\";\r\nimport { Button, Divider, InputNumber, Modal, notification } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport arrowLogo from \"./icons/arrow.svg\";\r\nimport useAccountModel from \"../../../hooks/useAccountModel\";\r\nimport { AccountId, Balance } from \"@polkadot/types/interfaces\";\r\nimport { BtcAddress } from \"../../../interfaces\";\r\nimport { useApi } from \"../../../hooks/useApi\";\r\nimport { BalanceSpan } from \"../../BalanceSpan\";\r\n\r\nimport { useFeeContext, FeeContext } from \"../../../hooks/useFeeContext\";\r\nimport {useAccountInfo} from \"../../../hooks/useAccountInfo\";\r\nimport FormatBalance from \"../../../hooks/useFormatBalance\";\r\nimport { web3FromAddress } from \"@polkadot/extension-dapp\";\r\ninterface VaultModel {\r\n  address: string;\r\n  btcAddress: BtcAddress;\r\n  issuedToken: Balance;\r\n  toBeIssuedToken: Balance;\r\n  toBeRedeemToken: Balance;\r\n  collateral: Balance;\r\n}\r\n\r\nfunction EarnCard() {\r\n  const value = useContext(FeeContext);\r\n  const pcxPrice = value.pcxPrice;\r\n  const { t } = useTranslation();\r\n  const [AddCollateralModal, SetAddCollateralModal] = useState(false);\r\n  const [vault, setVault] = useState<VaultModel | null>(null);\r\n  const [upperBound, setUpperBound] = useState(\"-\");\r\n  const [secureThreshold,SetsecureThreshold] = useState(0)\r\n  const { exchangeRate } = useFeeContext();\r\n  const [addPCX,setaddPCX] = useState(0)\r\n  const { currentAccount } = useAccountModel();\r\n  const { api, isApiReady } = useApi();\r\n\r\n  const accountInfo = useAccountInfo(currentAccount?.address!!)\r\n  async function ConfirmationIssueTrade() {\r\n    const injector = await web3FromAddress(currentAccount!!.address);\r\n    api.tx.xGatewayBitcoinV2\r\n      .addExtraCollateral(addPCX * 100000000)\r\n      .signAndSend(\r\n        currentAccount!!.address,\r\n        { signer: injector.signer },\r\n        ({ status, dispatchError, events }) => {\r\n          console.log(status);\r\n          if (status.isInBlock) {\r\n            notification[\"success\"]({\r\n              message: `Completed at block hash ${status.asInBlock.toString()}`,\r\n              duration: 0,\r\n            });\r\n          } else if (dispatchError) {\r\n            if (dispatchError.isModule) {\r\n              const decoded = api.registry.findMetaError(\r\n                dispatchError.asModule\r\n              );\r\n              const { documentation, name, section } = decoded;\r\n              notification[\"error\"]({\r\n                message: `${section}.${name}: ${documentation.join(\" \")}`,\r\n                duration: 0,\r\n              });\r\n            }\r\n          } else {\r\n            notification[\"success\"]({\r\n              message: `Current status: ${status.type}`,\r\n              duration: 0,\r\n            });\r\n            if (status.type === \"Finalized\") {\r\n              \r\n            }\r\n          }\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        notification[\"error\"]({\r\n          message: `:( transaction failed', ${error}`,\r\n          duration: 0,\r\n        });\r\n      });\r\n  }\r\n  const AddCollateralHandle = () => {\r\n    ConfirmationIssueTrade()\r\n    SetAddCollateralModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isApiReady && currentAccount) {\r\n      (async () => {\r\n        const vault = await api.query.xGatewayBitcoinV2.vaults(\r\n          currentAccount.address\r\n        );\r\n        if (vault.isSome) {\r\n          let vaultInfo = vault.unwrap();\r\n          let collateral = await api.query.system.account(\r\n            currentAccount.address\r\n          );\r\n          setVault({\r\n            address: currentAccount.address,\r\n            btcAddress: vaultInfo.wallet,\r\n            toBeRedeemToken: vaultInfo.toBeRedeemedTokens,\r\n            toBeIssuedToken: vaultInfo.toBeIssuedTokens,\r\n            issuedToken: vaultInfo.issuedTokens,\r\n            collateral: collateral.data.reserved,\r\n          });\r\n        }\r\n      })();\r\n    }\r\n  }, [currentAccount, isApiReady]);\r\n\r\n  useEffect(() => {\r\n    if (vault) {\r\n      const pcxInBtc = exchangeRate.price\r\n        .mul(vault.collateral)\r\n        .divn(Math.pow(10, exchangeRate.decimal.toNumber()));\r\n      setUpperBound(pcxInBtc.toNumber().toFixed(2));\r\n    } else {\r\n      setUpperBound(\"-\");\r\n    }\r\n  }, [vault, exchangeRate]);\r\n\r\n  useEffect(() => {\r\n    if (isApiReady) {\r\n        const secureThreshold = api.consts.xGatewayBitcoinV2.secureThreshold;\r\n        SetsecureThreshold(secureThreshold.toNumber() / 100)\r\n    }\r\n  }, [isApiReady]);\r\n  return (\r\n    <EarnCardStyle>\r\n      <EarnCardTopStyle>\r\n        <ul>\r\n          <li>\r\n            <div className={\"earn-card-title\"}>累计收益</div>\r\n            <div className={\"earn-pcx-num\"}>- PCX</div>\r\n          </li>\r\n          <li>\r\n            <div className={\"earn-card-title\"}>已发行</div>\r\n            <div className={\"issue-redeem-num\"}>\r\n              <BalanceSpan balance={vault?.issuedToken} />\r\n              XBTC\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className={\"earn-card-title\"}>Chainx 地址</div>\r\n            <div className={\"chainx-address\"}>{currentAccount?.address}</div>\r\n          </li>\r\n        </ul>\r\n        <ul className={\"right-ul\"}>\r\n          <li>\r\n            <div className={\"earn-card-title\"}>可发行量</div>\r\n            <div className={\"issuable-num\"}>{(((+vault?.collateral!! / 100000000) * pcxPrice)/secureThreshold).toFixed(5)} BTC</div>\r\n          </li>\r\n          <li>\r\n            <div className={\"earn-card-title\"}>抵押品 / 抵押率</div>\r\n            <div className={\"collateral-rate\"}>\r\n              <div>\r\n                <BalanceSpan balance={vault?.collateral} />PCX\r\n              </div>\r\n              {isFinite(((+vault?.collateral!! / 100000000) / +((vault?.issuedToken.toNumber()!!/ 1000000000) / pcxPrice))) ? ((+vault?.collateral!! / 100000000) / +((vault?.issuedToken.toNumber()!!/ 1000000000) / pcxPrice)).toFixed(5) : \"0\"}\r\n              <div className={\"collateral-rate-num\"}>/{isFinite(((+vault?.collateral!! / 100000000) / +((vault?.issuedToken.toNumber()!!/ 1000000000) / pcxPrice))) ? ((+vault?.collateral!! / 100000000) / +((vault?.issuedToken.toNumber()!!/ 1000000000) / pcxPrice)).toFixed(5) : \"-\"}%</div>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div className={\"earn-card-title\"}>邮箱</div>\r\n            <div className={\"email-edit\"}>编辑</div>\r\n          </li>\r\n        </ul>\r\n      </EarnCardTopStyle>\r\n      <Divider />\r\n      <Button\r\n        onClick={() => {\r\n          SetAddCollateralModal(true);\r\n        }}\r\n      >\r\n        {t(\"adding collateral\")}\r\n      </Button>\r\n      <AddCollateralModalStyle>\r\n        <Modal\r\n          title={t(\"adding collateral\")}\r\n          visible={AddCollateralModal}\r\n          onCancel={() => SetAddCollateralModal(false)}\r\n          footer={[\r\n            <Button onClick={() => SetAddCollateralModal(false)}>取消</Button>,\r\n            <Button onClick={AddCollateralHandle}>确认</Button>,\r\n          ]}\r\n        >\r\n          <AddCollateralInput>\r\n            <div className={\"addCollateral-info\"}>\r\n              <div className={\"addCollateral-title\"}>\r\n                {t(\"adding collateral\")}\r\n              </div>\r\n              <div className={\"addCollateral-amount\"}>{t('balance')} {FormatBalance(accountInfo?.data.free)} PCX</div>\r\n            </div>\r\n            <InputNumber value={addPCX} onChange={ \r\n                (e) => {\r\n                  if(e){\r\n                    console.log(e)\r\n                      setaddPCX(e)\r\n                  }else{\r\n                    console.log(e)\r\n                    setaddPCX(0)\r\n                  }\r\n                \r\n                }\r\n            }/>\r\n          </AddCollateralInput>\r\n          <CollateralDisplayStyle>\r\n            <ul>\r\n              <li>\r\n                <div>当前抵押率</div>\r\n                <div className={\"collateral-num\"}>{isFinite(((+vault?.collateral!! / 100000000) / +((vault?.issuedToken.toNumber()!!/ 1000000000) / pcxPrice))) ? ((+vault?.collateral!! / 100000000) / +((vault?.issuedToken.toNumber()!!/ 1000000000) / pcxPrice)).toFixed(5) : \"-\"}%</div>\r\n              </li>\r\n              <li>\r\n                <img src={arrowLogo} alt=\"\" />\r\n              </li>\r\n              <li>\r\n                <div>增加后抵押率</div>\r\n    \r\n                <div className={\"collateral-num before\"}>{isFinite(((+vault?.collateral!! + addPCX )/ 100000000) / +((vault?.issuedToken.toNumber()!!/ 1000000000) / pcxPrice)) ? (((+vault?.collateral!! + addPCX )/ 100000000) / +((vault?.issuedToken.toNumber()!!/ 1000000000) / pcxPrice)).toFixed(5) : \"-\"}%</div>\r\n              </li>\r\n            </ul>\r\n          </CollateralDisplayStyle>\r\n        </Modal>\r\n      </AddCollateralModalStyle>\r\n    </EarnCardStyle>\r\n  );\r\n}\r\n\r\nexport default EarnCard;\r\n","import styled from \"styled-components\";\n\nexport const BtcInfoCardStyle = styled.div`\n  width: 400px;\n  height: 322px;\n  background: #fff;\n  border: 1px solid #EFEFEF;\n  border-radius: 10px;\n  margin-left: 24px;\n  padding: 30px 20px;\n\n  .card-title {\n    font-size: 12px;\n    color: #8E8E8E;\n  }\n\n  .card-item {\n    margin-bottom: 20px;\n\n    .card-address {\n      margin-top: 4px;\n      font-size: 12px;\n      color: #009FCF;\n    }\n\n    .card-balance {\n      font-size: 20px;\n      color: #282828;\n      font-weight: bold;\n      margin-top: 4px;\n    }\n  }\n`\nexport const TradeInfoStyle = styled.div`\n  margin-top: 50px;\n  padding: 16px;\n  height: 107px;\n  width: 360px;\n  background: #F6F6F6;\n  border-radius: 6px;\n  .trade-info-header{\n    display: flex;\n    justify-content: space-between;\n    .header-title{\n      font-size: 12px;\n      color: #3D3D3D;\n    }\n    .trade-hash{\n      font-size: 12px;\n      color: #009FCF;\n      width: 125px;\n    }\n  }\n  ul {\n    display: flex;\n    justify-content: space-between;\n    text-align: center;\n    margin-top: 20px;\n    li{\n      .trade-title{\n        font-size: 12px;\n        color: #8E8E8E;\n      }\n      .trade-data{\n        margin-top: 12px;\n        font-size: 12px;\n        color: #282828;\n      }\n    }\n  }\n  \n  \n`\n","import {useApi} from \"./useApi\";\r\nimport {useEffect,useState} from 'react';\r\nfunction useVaults(account:string){\r\n    const {api} = useApi();\r\n    const [wallet,setWallat] = useState(\"\")\r\n    useEffect(()=> {\r\n        async function getAssets(account: string) {\r\n            const status = await api.query.xGatewayBitcoinV2.vaults(account);\r\n            if(!status.isNone){\r\n                setWallat(status.unwrap().wallet.toString())\r\n            }\r\n        \r\n        }\r\n        getAssets(account);\r\n    },[account])\r\n    return {wallet,setWallat}\r\n}\r\nexport default useVaults;","import React, {useState, useEffect, useContext} from \"react\";\r\nimport { Option } from \"@polkadot/types\";\r\nimport {Vault} from \"../../../interfaces\"\r\nimport useAccountModel from \"../../../hooks/useAccountModel\"\r\nimport {useApi} from \"../../../hooks/useApi\"\r\nimport {BtcInfoCardStyle, TradeInfoStyle} from \"./style\";\r\nimport useVaults from \"../../../hooks/useVaults\"\r\nfunction BtcInfoCard() {\r\n    const {currentAccount} = useAccountModel();\r\n    const { api, isApiReady } = useApi();\r\n    const [btcAddress,SetBtcAddress] = useState(\"\")\r\n    const {wallet} = useVaults(currentAccount?.address!!)\r\n    return (\r\n        <BtcInfoCardStyle>\r\n            <div className={\"card-item\"}>\r\n                <div className={\"card-title\"}>BTC 地址</div>\r\n                <div className={\"card-address\"}>{wallet}</div>\r\n            </div>\r\n            <div className={\"card-item\"}>\r\n                <div className={\"card-title\"}>BTC 余额</div>\r\n                <div className={\"card-balance\"}>-</div>\r\n            </div>\r\n            <TradeInfoStyle>\r\n                <div className={\"trade-info-header\"}>\r\n                    <div className={\"header-title\"}>最新交易哈希</div>\r\n                    <div className={\"trade-hash\"}>-</div>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        <div className={\"trade-title\"}>确认数</div>\r\n                        <div className={\"trade-data\"}>-</div>\r\n                    </li>\r\n                    <li>\r\n                        <div className={\"trade-title\"}>出块时间</div>\r\n                        <div className={\"trade-data\"}>-</div>\r\n                    </li>\r\n                    <li>\r\n                        <div className={\"trade-title\"}>金额</div>\r\n                        <div className={\"trade-data\"}>-</div>\r\n                    </li>\r\n                </ul>\r\n            </TradeInfoStyle>\r\n        </BtcInfoCardStyle>\r\n    )\r\n}\r\n\r\nexport default BtcInfoCard\r\n","import styled from \"styled-components\";\r\n\r\nexport const HistoryCardStyle = styled.div`\r\n  margin-top: 24px;\r\n  padding: 0 32px;\r\n  padding-bottom: 32px;\r\n  width: 1022px;\r\n  height: 100%;\r\n  background: #fff;\r\n  border: 1px solid #EFEFEF;\r\n  border-radius: 10px;\r\n  .ant-table{\r\n    font-size:12px\r\n  }\r\n`\r\n","import React, {useContext, useState} from \"react\";\r\nimport {HistoryCardStyle} from \"./style\";\r\nimport {FunctionSwitchButton, TableStyle} from \"../../../page/History/style\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Table} from \"antd\";\r\nimport useAccountModel from \"../../../hooks/useAccountModel\";\r\nimport {useApi} from \"../../../hooks/useApi\";\r\nimport {useRedeemRequests} from \"../../../hooks/useRedeemRequestList\";\r\nimport {convertBalanceToDisplayValue} from '../../../util'\r\nimport {decodeAddress, encodeAddress} from \"@polkadot/keyring\";\r\nconst data = [\r\n    {\r\n        id: 'id',\r\n        name: 'John Brown',\r\n        age: 32,\r\n        address: 'New York No. 1 Lake Park',\r\n    },\r\n];\r\nconst data2 = [\r\n    {\r\n        key: '1',\r\n        name: '赎回',\r\n        age: 32,\r\n        address: '赎回',\r\n    },\r\n];\r\ninterface HistoryRow {\r\n    id: string;\r\n    amount: string;\r\n    chainxAddress: string;\r\n    btcAddress: string;\r\n    hash: string;\r\n    countedBlock: string;\r\n    status: string;\r\n  }\r\nfunction HistoryCard() {\r\n    const [HistoryStatus, SetHistoryStatus] = useState('issue')\r\n    const {currentAccount} = useAccountModel();\r\n    const {api} =useApi()\r\n    const {t} = useTranslation()\r\n    const redeemRequestsList = useRedeemRequests();\r\n    const Emitcolumns = [\r\n        {\r\n            title: t<string>(\"Request number\"),\r\n            dataIndex: \"id\",\r\n            key: \"id\",\r\n            width:80\r\n        },\r\n        {\r\n            title: t<string>(\"Amount\"),\r\n            dataIndex: \"amount\",\r\n            key: \"amount\",\r\n            width:80\r\n        },\r\n        {\r\n            title: t<string>(\"ChainX Address\"),\r\n            dataIndex: \"chainxAddress\",\r\n            ellipsis: true,\r\n            key: \"chainxAddress\"\r\n        },\r\n        {\r\n            title: t<string>(\"BTC address\"),\r\n            dataIndex: \"btcAddress\",\r\n            ellipsis: true,\r\n            key: \"btcAddress\"\r\n        },\r\n        // {\r\n        //     title: t<string>(\"Transaction\"),\r\n        //     dataIndex: \"hash\",\r\n        //     key: \"hash\"\r\n        // },\r\n        // {\r\n        //     title: t<string>(\"Confirmation\"),\r\n        //     dataIndex: \"countedBlock\",\r\n        //     key: \"countedBlock\"\r\n        // },\r\n        // {\r\n        //     title: t<string>(\"State\"),\r\n        //     dataIndex: \"status\",\r\n        //     key: \"status\",\r\n        //     render: (text: string, record: any) => (\r\n        //         <a\r\n        //             onClick={() =>\r\n        //                 record.status === \"确认\" && console.log('dasda')\r\n        //             }\r\n        //         >\r\n        //             {text}\r\n        //         </a>\r\n        //     )\r\n        // }\r\n    ]\r\n    return (\r\n        <HistoryCardStyle>\r\n            <FunctionSwitchButton>\r\n                <ul>\r\n                    <li onClick={() => {\r\n                        SetHistoryStatus('issue')\r\n                    }} className={HistoryStatus === 'issue' ? \"active\" : \"\"}>{t('Redemption list')}</li>\r\n                    <li style={{ cursor: \"not-allowed\" }} className={HistoryStatus === 'Redeem' ? \"active\" : \"\"}>{t('History')}</li>\r\n                </ul>\r\n            </FunctionSwitchButton>\r\n            <TableStyle>\r\n                {HistoryStatus === \"issue\" ?\r\n                    <Table columns={Emitcolumns} dataSource={redeemRequestsList\r\n                        .filter(value => encodeAddress(decodeAddress(value.vaultId),44) === currentAccount?.address)\r\n                        .map<HistoryRow>(row => {\r\n                          return {\r\n                            id: row.id.toString(),\r\n                            amount: convertBalanceToDisplayValue(row.amount).toString(),\r\n                            chainxAddress: encodeAddress(decodeAddress(row.chainxAddr.toString()),44),\r\n                            btcAddress: row.userBtcAddr.toString(),\r\n                            hash: \"\",\r\n                            countedBlock: \"0\",\r\n                            status: \"确认\"\r\n                          };\r\n                        })} /> :\r\n                    <Table columns={Emitcolumns} dataSource={data2} />\r\n                }\r\n            </TableStyle>\r\n        </HistoryCardStyle>\r\n    )\r\n}\r\nexport default HistoryCard\r\n","import { useApi } from \"../hooks/useApi\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Option, U128 } from \"@polkadot/types\";\r\nimport { RedeemRequest, Vault } from \"../interfaces\";\r\nimport { AccountId } from \"@polkadot/types/interfaces\";\r\n\r\nexport interface RedeemHistoryRow {\r\n  id: number;\r\n  requester: string;\r\n  vaultId: string;\r\n  amount: number;\r\n  chainxAddr: string;\r\n  userBtcAddr: string;\r\n  hash: string;\r\n  openTime: number;\r\n  countedBlock: number;\r\n  status: string;\r\n}\r\n\r\nexport const useRedeemRequests = () => {\r\n  const { api, isApiReady } = useApi();\r\n  const [redeemRequestsList, setRedeemRequestList] = useState<RedeemHistoryRow[]>([]);\r\n\r\n  const fetchData = async () => {\r\n    const data = await api.query.xGatewayBitcoinV2.redeemRequests.entries<Option<RedeemRequest>, [U128]>();\r\n    const vaults = await api.query.xGatewayBitcoinV2.vaults.entries<Option<Vault>, [AccountId]>();\r\n    let initIssueLog = data.map(([key, value]) => {\r\n      let request: RedeemRequest = value.unwrap();\r\n      const [, vault] = vaults.find(([key]) => request.vault.eq(key.args[0]))!!;\r\n      return {\r\n        id: key.args[0].toNumber(),\r\n        vaultId: request.vault.toString(),\r\n        requester: request.requester.toString(),\r\n        amount: request.amount.toNumber(),\r\n        chainxAddr: request.requester.toString(),\r\n        userBtcAddr: vault.unwrap().wallet.toString(),\r\n        openTime: request.openTime.toNumber(),\r\n        hash: \"\",\r\n        countedBlock: 0,\r\n        status: \"processing\"\r\n      };\r\n    });\r\n    initIssueLog.sort((a, b) => a.id - b.id);\r\n    setRedeemRequestList(initIssueLog);\r\n  };\r\n\r\n  useEffect(() => {\r\n    isApiReady && fetchData();\r\n  }, [isApiReady]);\r\n  useEffect(() => {\r\n    let unsubscribe: undefined | { then: () => Promise<void> };\r\n    (async () => {\r\n      if (isApiReady) {\r\n        unsubscribe = api.rpc.chain.subscribeFinalizedHeads(async () => {\r\n          fetchData();\r\n        });\r\n      }\r\n    })();\r\n    return () => {\r\n      unsubscribe && unsubscribe.then();\r\n    };\r\n  }, [isApiReady]);\r\n  return redeemRequestsList;\r\n};\r\n","import React from \"react\";\nimport {VaultCardStyle, VaultTopStyle} from \"./style\";\nimport EarnCard from \"./EarnCard\";\nimport BtcInfoCard from \"./BtcInfoCard\";\nimport HistoryCard from \"./HistoryCard\";\n\nfunction VaultCard() {\n    return (\n        <VaultCardStyle>\n            <div className={\"vault-card-title\"}>\n                资产保险库\n            </div>\n            <VaultTopStyle>\n                <EarnCard/>\n                <BtcInfoCard/>\n            </VaultTopStyle>\n            <HistoryCard/>\n        </VaultCardStyle>\n    )\n}\n\nexport default VaultCard;\n","import React, { useState } from \"react\";\r\nimport {AgreementStyle, CollateralStyle, RegisterAccountStyle, RegisterVaultCardStyle} from \"./style\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Button, Checkbox, Form, Input, InputNumber, notification} from \"antd\";\r\nimport {BtcAddressStyle} from \"../Redeem/style\";\r\nimport { useAccountInfo} from \"../../hooks/useAccountInfo\";\r\nimport FormatBalance from \"../../hooks/useFormatBalance\";\r\nimport useAccountModel from \"../../hooks/useAccountModel\";\r\nimport { web3FromAddress } from \"@polkadot/extension-dapp\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport VaultCard from \"../VaultCard\";\r\nfunction RegisterVaultCard() {\r\n    const {t} = useTranslation()\r\n    const {currentAccount} = useAccountModel()\r\n    const accountInfo = useAccountInfo(currentAccount?.address!!)\r\n    const { api, isApiReady } = useApi();\r\n    const [regVault,setRegVault] = useState(false)\r\n    async function onFinish(values: any) {\r\n        console.log(values)\r\n        const injector = await web3FromAddress(currentAccount!!.address);\r\n        api.tx.xGatewayBitcoinV2\r\n          .registerVault(values.collateral * 100000000, values.address)\r\n          .signAndSend(\r\n            currentAccount!!.address,\r\n            { signer: injector.signer },\r\n            ({ status, dispatchError, events }) => {\r\n              if (status.isInBlock) {\r\n                notification[\"success\"]({\r\n                  message: `Completed at block hash ${status.asInBlock.toString()}`,\r\n                  duration: 0,\r\n                });\r\n              } else if (dispatchError) {\r\n                if (dispatchError.isModule) {\r\n                  const decoded = api.registry.findMetaError(\r\n                    dispatchError.asModule\r\n                  );\r\n                  const { documentation, name, section } = decoded;\r\n                  notification[\"error\"]({\r\n                    message: `${section}.${name}: ${documentation.join(\" \")}`,\r\n                    duration: 0,\r\n                  });\r\n                }\r\n              } else {\r\n                notification[\"success\"]({\r\n                  message: `Current status: ${status.type}`,\r\n                  duration: 0,\r\n                });\r\n                if (status.type === \"Finalized\") {\r\n                   setRegVault(true)\r\n                }\r\n              }\r\n            }\r\n          )\r\n          .catch((error: any) => {\r\n            notification[\"error\"]({\r\n              message: `:( transaction failed', ${error}`,\r\n              duration: 0,\r\n            });\r\n          });\r\n      }\r\n    return (\r\n      <div>\r\n        {regVault ? <VaultCard/> : \r\n        <RegisterVaultCardStyle>\r\n            <div className={\"card-title\"}>注册保险库</div>\r\n            <Form name={\"register\"} onFinish={onFinish}>\r\n                <RegisterAccountStyle>\r\n                    <div>{t('Register Account')}</div>\r\n                    <div className={\"current-account\"}>{currentAccount?.address}</div>\r\n                </RegisterAccountStyle>\r\n                <CollateralStyle>\r\n                    <div className={\"collateral-info\"}>\r\n                        <div className={\"collateral-title\"}>\r\n                            {t('Collateral')}\r\n                        </div>\r\n                        <div className={\"collateral-minimum\"}>\r\n                            ({t('Minimum value')} 1000)\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"input-collateral\"}>\r\n                        <Form.Item name={\"collateral\"}\r\n                                   rules={[{required: true, message: t('Please enter the number of collateral')}]}>\r\n                            <InputNumber min={1000} placeholder={t('Please enter the number of collateral')}/>\r\n                        </Form.Item>\r\n                        <div className={\"pcx-balance\"}>\r\n                            PCX余额：{FormatBalance(accountInfo?.data.free)}\r\n                        </div>\r\n                    </div>\r\n                </CollateralStyle>\r\n                <BtcAddressStyle>\r\n                    <div className={\"btc-address-info\"}>\r\n                        <div className={\"btc-address-title\"}>{t('BTC address')}</div>\r\n                    </div>\r\n                    <Form.Item name={\"address\"} rules={[{required: true, message: t('Please enter BTC address')}]}>\r\n                        <Input placeholder={t('Please enter BTC address')}/>\r\n                    </Form.Item>\r\n                </BtcAddressStyle>\r\n                <AgreementStyle>\r\n                    <Form.Item name={\"checked\"} valuePropName=\"checked\" rules={[\r\n                        {validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error(t('Should accept agreement'))),},]}>\r\n                        <Checkbox onChange={() => console.log('checked')}>\r\n                            <span>确认是否同意 </span>\r\n                            <a href={\"/\"}>资产保险库协议</a>\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n                </AgreementStyle>\r\n                <Form.Item>\r\n                    <Button htmlType=\"submit\">\r\n                        注册\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </RegisterVaultCardStyle>\r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default RegisterVaultCard;\r\n","import React, {useState, useEffect, useContext} from \"react\";\r\nimport RegisterVaultCard from \"../../components/RegisterVaultCard\";\r\nimport VaultCard from \"../../components/VaultCard\";\r\nimport { Option } from \"@polkadot/types\";\r\nimport {Vault} from \"../../interfaces\"\r\nimport useAccountModel from \"../../hooks/useAccountModel\"\r\nimport {useApi} from \"../../hooks/useApi\"\r\nimport { createModel } from \"hox\";\r\nconst useVaultModel = createModel(() => useState<Vault | null>(null));\r\nfunction VaultPage(){\r\n    const {currentAccount} = useAccountModel();\r\n    const { api, isApiReady } = useApi();\r\n    const [vault, setVault] = useVaultModel();\r\n    // 查询 vault 状态\r\n    useEffect(()=> {\r\n        async function GetStatus() {\r\n            const status = await api.query.xGatewayBitcoinV2.vaults<Option<Vault>>(currentAccount?.address || \"\");\r\n            setVault(status.isNone ? null : (status.value as Vault));\r\n        }\r\n        if(isApiReady){\r\n            GetStatus()\r\n        }\r\n    },[currentAccount,isApiReady])\r\n    return (\r\n        <>\r\n            {\r\n            vault ? \r\n             <VaultCard/>\r\n             : \r\n            <RegisterVaultCard/>}\r\n        </>\r\n    )\r\n}\r\nexport default VaultPage;\r\n"],"sourceRoot":""}